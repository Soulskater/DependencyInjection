var dependencyContainer=function(){var t=[];return{registerType:function(e,n){t.push({name:e,instance:n})},resolveType:function(e){for(var n=0;n<t.length;n++)if(t[n].name===e)return t[n].instance;throw new Error(e+" type is unregistered, cannot inject it!")}}}(),inject=function(){function t(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])}for(var e=[],n=0;n<arguments.length;n++)e.push(dependencyContainer.resolveType(arguments[n]));var r=function(t){if("function"!=typeof t)throw new Error("The base function parameter should be a function, got "+typeof t);return{"class":function(e){return o(e,t)}}},o=function(n,r){if("function"!=typeof n)throw new Error("The constructor parameter should be a function, got "+typeof n);var o=function(){for(var o=e.concat([]),a=0;a<arguments.length;a++)o.push(arguments[a]);r&&(this.base=function(){var e=function(t,e){return function(){t.apply(this,e)}};this.base=new(e(r,arguments)),t(this,this.base)}),n.apply(this,o)};return r?(o.prototype=Object.create(r.prototype),o.constructor=n):(o.prototype=Object.create(n.prototype),o.constructor=n),o};return{base:r,"class":o}},registerNamespace=function(t,e){function n(t,e){return e.hasOwnProperty(t)&&e[t]||(e[t]={}),e[t]}if(e=e||window,"string"!=typeof t)throw new Error("The namespace parameter should be a '.' separated string, got "+typeof t);for(var r=t.split("."),o=e,a=0;a<r.length;a++)o=n(r[a],o)};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlcGVuZGVuY3kvY29udGFpbmVyLmpzIiwiZGVwZW5kZW5jeS9pbmplY3Rvci5qcyIsImRlcGVuZGVuY3kvcmVnaXN0ZXJOYW1lc3BhY2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsR0FBQSxxQkFBQSxXQUNBLEdBQUEsS0FFQSxRQUNBLGFBQUEsU0FBQSxFQUFBLEdBQ0EsRUFBQSxNQUNBLEtBQUEsRUFDQSxTQUFBLEtBR0EsWUFBQSxTQUFBLEdBQ0EsSUFBQSxHQUFBLEdBQUEsRUFBQSxFQUFBLEVBQUEsT0FBQSxJQUNBLEdBQUEsRUFBQSxHQUFBLE9BQUEsRUFDQSxNQUFBLEdBQUEsR0FBQSxRQUdBLE1BQUEsSUFBQSxPQUFBLEVBQUEsaURDaEJBLE9BQUEsV0FNQSxRQUFBLEdBQUEsRUFBQSxHQUNBLElBQUEsR0FBQSxLQUFBLEdBQ0EsRUFBQSxlQUFBLEtBQ0EsRUFBQSxHQUFBLEVBQUEsSUFQQSxJQUFBLEdBREEsTUFDQSxFQUFBLEVBQUEsRUFBQSxVQUFBLE9BQUEsSUFDQSxFQUFBLEtBQUEsb0JBQUEsWUFBQSxVQUFBLElBV0EsSUFBQSxHQUFBLFNBQUEsR0FDQSxHQUFBLGtCQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsK0RBQUEsR0FHQSxRQUNBLFFBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxFQUFBLE1BS0EsRUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLGtCQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsNkRBQUEsR0FHQSxJQUFBLEdBQUEsV0FFQSxJQUFBLEdBREEsR0FBQSxFQUFBLFdBQ0EsRUFBQSxFQUFBLEVBQUEsVUFBQSxPQUFBLElBQ0EsRUFBQSxLQUFBLFVBQUEsR0FHQSxLQUNBLEtBQUEsS0FBQSxXQUNBLEdBQUEsR0FBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLFlBQ0EsRUFBQSxNQUFBLEtBQUEsSUFJQSxNQUFBLEtBQUEsSUFBQSxFQUFBLEVBQUEsWUFDQSxFQUFBLEtBQUEsS0FBQSxRQUdBLEVBQUEsTUFBQSxLQUFBLEdBV0EsT0FSQSxJQUNBLEVBQUEsVUFBQSxPQUFBLE9BQUEsRUFBQSxXQUNBLEVBQUEsWUFBQSxJQUdBLEVBQUEsVUFBQSxPQUFBLE9BQUEsRUFBQSxXQUNBLEVBQUEsWUFBQSxHQUVBLEVBR0EsUUFDQSxLQUFBLEVBQ0EsUUFBQSxJQ2pFQSxrQkFBQSxTQUFBLEVBQUEsR0FZQSxRQUFBLEdBQUEsRUFBQSxHQUlBLE1BSEEsR0FBQSxlQUFBLElBQUEsRUFBQSxLQUNBLEVBQUEsT0FFQSxFQUFBLEdBYkEsR0FGQSxFQUFBLEdBQUEsT0FFQSxnQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLHVFQUFBLEdBSUEsS0FBQSxHQUZBLEdBQUEsRUFBQSxNQUFBLEtBQ0EsRUFBQSxFQUNBLEVBQUEsRUFBQSxFQUFBLEVBQUEsT0FBQSxJQUNBLEVBQUEsRUFBQSxFQUFBLEdBQUEiLCJmaWxlIjoiZGktanMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgZ21lc3phcm9zIG9uIDEvMjgvMjAxNS5cclxuICovXHJcbnZhciBkZXBlbmRlbmN5Q29udGFpbmVyID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciByZWdpc3RlcmVkVHlwZXMgPSBbXTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlZ2lzdGVyVHlwZTogZnVuY3Rpb24gKG5hbWUsIGluc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHJlZ2lzdGVyZWRUeXBlcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2VcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZXNvbHZlVHlwZTogZnVuY3Rpb24gKG5hbWUpIHtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RlcmVkVHlwZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZWdpc3RlcmVkVHlwZXNbaV0ubmFtZSA9PT0gbmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdpc3RlcmVkVHlwZXNbaV0uaW5zdGFuY2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG5hbWUgKyBcIiB0eXBlIGlzIHVucmVnaXN0ZXJlZCwgY2Fubm90IGluamVjdCBpdCFcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufSgpKTtcclxuIiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgZ21lc3phcm9zIG9uIDEvMjgvMjAxNS5cclxuICovXHJcbnZhciBpbmplY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgX3BhcmFtcyA9IFtdO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBfcGFyYW1zLnB1c2goZGVwZW5kZW5jeUNvbnRhaW5lci5yZXNvbHZlVHlwZShhcmd1bWVudHNbaV0pKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBfb2JqZWN0RXh0ZW5kKHNyYywgZGVzdCkge1xyXG4gICAgICAgIGZvciAodmFyIHByb3BOYW1lIGluIGRlc3QpIHtcclxuICAgICAgICAgICAgaWYgKGRlc3QuaGFzT3duUHJvcGVydHkocHJvcE5hbWUpKSB7XHJcbiAgICAgICAgICAgICAgICBzcmNbcHJvcE5hbWVdID0gZGVzdFtwcm9wTmFtZV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIF9iYXNlRmFjdG9yeSA9IGZ1bmN0aW9uIChiYXNlQ2xhc3MpIHtcclxuICAgICAgICBpZiAodHlwZW9mIGJhc2VDbGFzcyAhPT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBiYXNlIGZ1bmN0aW9uIHBhcmFtZXRlciBzaG91bGQgYmUgYSBmdW5jdGlvbiwgZ290IFwiICsgdHlwZW9mIGJhc2VDbGFzcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjbGFzczogZnVuY3Rpb24gKGN0b3IpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBfY2xhc3NGYWN0b3J5KGN0b3IsIGJhc2VDbGFzcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBfY2xhc3NGYWN0b3J5ID0gZnVuY3Rpb24gKGN0b3IsIGJhc2VDbGFzcykge1xyXG4gICAgICAgIGlmICh0eXBlb2YgY3RvciAhPT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBjb25zdHJ1Y3RvciBwYXJhbWV0ZXIgc2hvdWxkIGJlIGEgZnVuY3Rpb24sIGdvdCBcIiArIHR5cGVvZiBjdG9yKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBfY2xhc3MgPSBmdW5jdGlvbiAobG9jYWxzKSB7XHJcbiAgICAgICAgICAgIHZhciBhbGxQYXJhbXMgPSBfcGFyYW1zLmNvbmNhdChbXSk7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBhbGxQYXJhbXMucHVzaChhcmd1bWVudHNbaV0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoYmFzZUNsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJhc2UgPSBmdW5jdGlvbiAocGFyYW1zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHdyYXBwZXIgPSBmdW5jdGlvbiAoZiwgYXJncykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZi5hcHBseSh0aGlzLCBhcmdzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJhc2UgPSBuZXcgKHdyYXBwZXIoYmFzZUNsYXNzLCBhcmd1bWVudHMpKSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIF9vYmplY3RFeHRlbmQodGhpcywgdGhpcy5iYXNlKTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY3Rvci5hcHBseSh0aGlzLCBhbGxQYXJhbXMpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGlmIChiYXNlQ2xhc3MpIHtcclxuICAgICAgICAgICAgX2NsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoYmFzZUNsYXNzLnByb3RvdHlwZSk7XHJcbiAgICAgICAgICAgIF9jbGFzcy5jb25zdHJ1Y3RvciA9IGN0b3I7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBfY2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShjdG9yLnByb3RvdHlwZSk7XHJcbiAgICAgICAgICAgIF9jbGFzcy5jb25zdHJ1Y3RvciA9IGN0b3I7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBfY2xhc3M7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgYmFzZTogX2Jhc2VGYWN0b3J5LFxyXG4gICAgICAgIGNsYXNzOiBfY2xhc3NGYWN0b3J5XHJcbiAgICB9O1xyXG59OyIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IE1DRyBvbiAyMDE1LjAxLjMxLi5cclxuICovXHJcbnZhciByZWdpc3Rlck5hbWVzcGFjZSA9IGZ1bmN0aW9uIChuYW1lc3BhY2UsIG93bmVyKSB7XHJcbiAgICBvd25lciA9IG93bmVyIHx8IHdpbmRvdztcclxuXHJcbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBuYW1lc3BhY2UgcGFyYW1ldGVyIHNob3VsZCBiZSBhICcuJyBzZXBhcmF0ZWQgc3RyaW5nLCBnb3QgXCIgKyAodHlwZW9mIG5hbWVzcGFjZSkpO1xyXG4gICAgfVxyXG4gICAgdmFyIHNwbGl0dGVkTmFtZXNwYWNlID0gbmFtZXNwYWNlLnNwbGl0KCcuJyk7XHJcbiAgICB2YXIgcGFyZW50ID0gb3duZXI7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNwbGl0dGVkTmFtZXNwYWNlLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgcGFyZW50ID0gZW5zdXJlT2JqZWN0KHNwbGl0dGVkTmFtZXNwYWNlW2ldLCBwYXJlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGVuc3VyZU9iamVjdChuYW1lLCBwYXJlbnQpIHtcclxuICAgICAgICBpZiAoIXBhcmVudC5oYXNPd25Qcm9wZXJ0eShuYW1lKSB8fCAhcGFyZW50W25hbWVdKSB7XHJcbiAgICAgICAgICAgIHBhcmVudFtuYW1lXSA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGFyZW50W25hbWVdO1xyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==